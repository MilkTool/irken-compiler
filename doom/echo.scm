;; -*- Mode: Irken -*-

(require "lib/basis.scm")
(require "doom/doom.scm")

(require-ffi 'kqueue)

(define (serve ip port)
  (let ((sock (doom/make (tcp4-sock)))
        (addr (address/make4 ip port)))
    (sock.bind addr)
    (sock.listen 5)
    (printf "starting server...\n")
    (let loop ()
      (printf "accept wait...\n")
      (let (((sockfun addr) (sock.accept)))
        (printf "client: addr " (address/unparse addr) "\n")
        (poller/fork (lambda () (client sockfun)))
        (loop)))))

(define (client sockfun)
  (let ((sock (sockfun 8192 8192)))
    (print-string "client starting\n")
    (let loop ()
      (let ((data (sock.recv)))
        (printf "data = " (string data) "\n")
        (when (> (string-length data) 0)
          (sock.send data)
          (loop))))
    (printf "exiting client...\n")
    (sock.close)
    ))

(serve "0.0.0.0" 9999)
(poller/wait-and-schedule)
