;; -*- Mode: Irken -*-

(lexicon
 ;; XXX newlines should be allowed in strings.
 (STRING      (reg "\"([^\n\"\\\\]|\\\\.)*\""))
 (WHITESPACE  (reg "[ \n\t]+"))
 (COMMENT     (reg ";[^\n]*\n"))
 (NUMBER      (reg "[0-9]+"))
 (BIN         (reg "#b[01]+"))
 (OCT         (reg "#o[0-7]+"))
 (DEC         (reg "#d[0-9]+"))
 (HEX         (reg "#x[0-9A-Fa-f]+"))
 (DOT         (lit "."))
 (LBRACKET    (lit "["))
 (RBRACKET    (lit "]"))
 (LPAREN      (lit "("))
 (RPAREN      (lit ")"))
 (BOOL        (reg "#[tf]"))
 (ARROW       (lit "->"))
 (KEYWORD     (or (reg "begin|match|with|cond|else|datatype|defmacro|if|lambda|let|define|set!")
                  (reg "inc!|dec!|when-maybe|while-maybe|when")
                  (reg "for-range\\*|for-range|for-range-rev|for-range-rev\\*")
                  (reg "for-vector|for-vector-rev|forever|for|and|or")
                  (reg "make-generator|makegen|letcc|let/cc|call/cc|callcc")
                  (reg "raise|try|except|include|require-ffi")
                  ))
 (PRIVATE     (reg "%[%A-Za-z-][%A-Za-z0-9-]+"))
 (CHAR        (cat (lit "#\\")
                   (or (lit ".") (lit "newline") (lit "space")
                       (lit "tab") (lit "return") (lit "eof") (lit "nul"))))
 (CHAR        (reg "(#\\\\.)|(#\\\\newline)|(#\\\\space)|(#\\\\tab)|(#\\\\return)|(#\\\\eof)|(#\\\\nul)"))
 (CONSTRUCTOR (reg "([A-Za-z-][A-Za-z0-9-]*)?:[A-Za-z0-9-/]+"))
 (SYMBOL      (reg "([^;()\\[\\] \t\n\"\\.]+)|(\\.\\.\\.)"))
 )
